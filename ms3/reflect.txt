/*/////////////////////////////////////////////////////////////////////////
                       Milestone - 3
Full Name  :Hla Myint Myat 
Student ID#:185923216
Email      :hmyat1@myseneca.ca
Section    :NFF

Authenticity Declaration:
I declare that this submission is the result of my own work and I only copied
the code that my professor provided to complete my workshops and assignments. 
This submitted piece of work has not been shared with any other student or 3rd party content provider.
 /////////////////////////////////////////////////////////////////////////*/

In Milestone 3, we tackled the implementation and testing of the Workstation and LineManager modules, which are the backbone of our assembly line simulation.

Workstation Module:
We started with the Workstation module, which basically extends what a Station does by managing customer orders at specific points in the assembly line. We used double-ended queues to handle orders, which made tracking and managing them much smoother. The queues (g_pending, g_completed, g_incomplete) played a crucial role in organizing orders from start to finish.

One of the important tasks was to make sure each Workstation could fill orders and move them to the next station if possible. This required managing inventory effectively and dealing with cases where orders couldn’t be completely filled. The fill and attemptToMoveOrder functions were key to making this process efficient and ensuring that incomplete orders were handled properly.

We also made sure that Workstation objects couldn’t be copied or moved, maintaining the integrity of the assembly line setup. This was important to prevent any unintended duplication or transfer of responsibilities among the stations.

LineManager Module:
Next, the LineManager module was responsible for setting up and managing the entire assembly line. This involved reading a configuration file to set up the connections between workstations and determining the first station in the line. Using STL algorithms helped us manage these connections efficiently and keep the code clean.

Reordering the stations to reflect the actual flow of the assembly line was a bit challenging but essential. The reorderStations function was crucial for maintaining the correct order. The run function simulated the assembly line’s operations, moving orders through stations and attempting to fill them. Keeping track of the iteration number and displaying it gave us a clear picture of the progress in each simulation step.
